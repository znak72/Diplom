---
# tasks file for zabbix-server

- name: Install prerequisite packages
  become: true
  apt:
    state: present
    name:
      - tcsh
      - htop

- name: Create directory for Zabbix files
  ansible.builtin.file:
    path: /etc/zabbix-files
    state: directory
    mode: "0755"

- name: Download the Zabbix release package
  ansible.builtin.get_url:
    url: "https://repo.zabbix.com/zabbix/6.4/debian/pool/main/z/zabbix-release/zabbix-release_6.4-1+debian11_all.deb"
    dest: /etc/zabbix-files
  become: true

- name: Install the Zabbix release package
  ansible.builtin.apt:
    deb: /etc/zabbix-files/zabbix-release_6.4-1+debian11_all.deb
  become: true

- name: Update apt packages
  apt:
    force_apt_get: true
    update_cache: yes
    upgrade: dist
  become: true

- name: Install Zabbix frontend, agent, server, and related packages
  ansible.builtin.apt:
    pkg:
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-nginx-conf
      - zabbix-sql-scripts
      - zabbix-agent
  become: true

- name: Install MySQL and related packages
  ansible.builtin.apt:
    name:
      - default-mysql-server
      - python3-pip
      - default-libmysqlclient-dev
      - python3-dev
      - python3-mysqldb
    state: present

- name: Enable and reload MySQL service
  ansible.builtin.systemd:
    name: mysql
    enabled: true
    masked: no
    state: restarted

- name: Create MySQL user and  password
  community.mysql.mysql_user:
    name: zabbix
    password: "{{ password_db }}"
    priv: "*.*:ALL,GRANT"
    state: present

- name: Create MySQL database named 'zabbix' with specified encoding and collation
  community.mysql.mysql_db:
    name: zabbix
    encoding: utf8mb4
    collation: utf8mb4_bin
    state: present

- name: Check if server.sql exists
  stat:
    path: /usr/share/zabbix-sql-scripts/mysql/server.sql
  register: result

- name: Extract server.sql if not already extracted
  ansible.builtin.shell:
    cmd: gunzip /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
  when: not result.stat.exists

- name: Import server.sql into the zabbix database
  community.mysql.mysql_db:
    name: zabbix
    state: import
    target: /usr/share/zabbix-sql-scripts/mysql/server.sql
  when: not result.stat.exists

- name: Set new database password for MySQL database in zabbix_server.conf
  ansible.builtin.lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    insertafter: "DBPassword="
    line: DBPassword={{ password_db }}

- name: Set PHP port and server address
  replace:
    path: /etc/zabbix/nginx.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - { regexp: '#        listen          8080;', replace: '        listen          8080;' }
    - { regexp: '#        server_name     example.com;', replace: '        server_name     zabbix.example.com;' }
  notify: restart nginx



- name: enable and restart zabbix and webserver
  ansible.builtin.systemd:
    name: zabbix-server
    enabled: true
    state: restarted

- name: enable and restart zabbix agent
  ansible.builtin.systemd:
    name: zabbix-agent
    enabled: true
    masked: no
    state: restarted
    
- name: enable and restart nginx
  ansible.builtin.systemd:
    name: nginx
    enabled: true
    masked: no
    state: restarted

- name: enable and restart php
  ansible.builtin.systemd:
    name: php7.4-fpm
    enabled: true
    masked: no
    state: restarted